plot(punti, freq, ylab="probability", xlab="x",
xlim=c(0,13))
plot(punti, freq, ylab="probability", xlab="x",
xlim=c(0,13), add=T)
plot(punti, freq, ylab="probability", xlab="x",
xlim=c(0,13), add="T")
curve(dnorm(x,170, sqrt(100)), col=4, lwd=3, lty=4, xlim=c(140,200))
curve(dnorm(x,170, sqrt(100)), col=4, lwd=3, lty=4, xlim=c(140,200), add=T)
plot(punti, freq, ylab="probability", xlab="x",
xlim=c(0,13), add="T")
plot(punti, freq, ylab="probability", xlab="x",
xlim=c(0,13), add="T")
hist(dati)
curve(dnorm(x,170, sqrt(100)), col=4, lwd=3, lty=4, xlim=c(140,200), add=T)
curve(dnorm(x,170, sqrt(100)), col=4, lwd=3, lty=4, add=T)
hist(dati, freq = FALSE)
curve(dnorm(x,170, sqrt(100)), col=4, lwd=3, lty=4, add=T)
set.seed(3)
n <- 800
dati <- rnorm(n, 10, 5)
dnorm(c(-400, 400), 10, 5)
table <- table(dati)
tableo <- as.data.frame(table)
tableo
punti <- as.numeric(levels(tableo$Freq))
freq <- as.numeric(tableo$Freq/n)
hist(dati, freq = FALSE)
curve(dnorm(x,170, sqrt(100)), col=4, lwd=3, lty=4, add=T)
n <- 800
dati <- rnorm(n, 10, 5)
hist(dati, freq = FALSE)
curve(dnorm(x,10, 5), col=4, lwd=3, lty=4, add=T)
rm(list=ls())
library(insuranceData)
data("AutoBi")
str(AutoBi) # esplorare il tipo di variabili
# A volte è opportuno trasformare un variabile quantitativa in classi: cut()
?cut # restituisce un factor
range(AutoBi$CLMAGE, na.rm=TRUE)
CLMAGEclass<-cut(AutoBi$CLMAGE, breaks=6) #crea 6 classi
str(CLMAGEclass)
levels(CLMAGEclass)
# ma possiamo anche definire classi di ampiezza diversa
CLMAGEclass<-cut(AutoBi$CLMAGE, breaks=c(0,15,24,36,50,95),
include.lowest = T)
CLMAGEclass<-cut(AutoBi$CLMAGE, breaks=c(-1,15,24,36,50,95))
str(CLMAGEclass)
levels(CLMAGEclass)
library(MASS)
data("Cars93")
View(Cars93)
hist(Cars93$Length)
?hist
hist(Cars93$Length, prob=T)
hist(Cars93$Length)
hist(Cars93$Length, prob=T)
hist(Cars93$Length, prob=TRUE, main="istogramma con le densità")
hist(Cars93$Length, prob=TRUE, breaks=12, main="istogramma 12 intervalli")
hist(Cars93$Length, prob=TRUE, breaks=c(140,160,170,180,190,200,220),
main="istogramma con classi di diversa ampiezza")
hist(Cars93$Length, prob=TRUE, breaks=c(140,160,170,180,190,200,220),
main="istogramma con classi di diversa ampiezza")
hist(Cars93$Length, prob=TRUE, breaks=c(140,160,170,180,190,200,220),
main="istogramma con classi di diversa ampiezza")
str(mio)
str(mio)
mio = hist(Cars93$Length, prob=TRUE, breaks=c(140,160,170,180,190,200,220),
main="istogramma con classi di diversa ampiezza")
str(mio)
sum(mio$counts)
4/93
freq = 4/93
cl = freq / 20
str(mio)
sum(Cars93$Length)
len <- c(20,10,10,10,10,20)
len <- c(20,10,10,10,10,20)
sum(len*mio$density)
print(3)
print(seq(from=1, to=20))
print(seq(from=10, to=20))
print(seq(from=10, to=20, lenght=3000))
print(seq(from=10, to=20, length=3000))
sum <-
mean <- mean(seq(from=20, to=50, length=3000))
mean
?sum
sum <- sum(seq(from=20, to=50, length=3000))
mean <- mean(seq(from=20, to=50, length=3000))
print(seq(from=20, to=50))
print(seq(from=20, to=50, length=3000))
sum
mean
fib(3)
fib <- function(n){
sum <- 0
a <- 1
b <- 2
for(i in 1:length(n)){
sum <- a + b
a <- b
b <- sum
}
return(sum)
}
fib(3)
fib(5)
fib(5)
fib(5)
sum
fib <- function(n){
sum <- 0
a <- 1
b <- 2
for(i in 1:length(n)){
sum <- a + b
a <- b
b <- sum
}
return(sum)
}
fib(5)
fib(5)
fib <- function(n){
sum <- 0
a <- 1
b <- 1
for(i in 1:length(n)){
sum <- a + b
a <- b
b <- sum
}
return(sum)
}
fib(5)
fibonacci <- fib(3)
fibonacci
fibonacci <- fib(5)
fibonacci
fib <- function(n){
sum <- 0
a <- 1
b <- 1
for(i in 1:length(n)){
sum <- a + b
a <- b
b <- sum
}
return(sum)
}
fib <- function(n){
sum <- 0
a <- 1
b <- 1
for(i in 1:length(n)){
sum <- a + b
a <- b
b <- sum
print(sum)
}
}
fibonacci <- fib(5)
fib <- function(n){
sum <- 0
a <- 1
b <- 1
for(i in 1:n){
sum <- a + b
a <- b
b <- sum
print(sum)
}
}
fibonacci <- fib(5)
print(a)
fib <- function(n){
sum <- 0
a <- 1
b <- 1
print(a)
for(i in 1:n){
sum <- a + b
a <- b
b <- sum
print(sum)
}
}
fibonacci <- fib(5)
fib <- function(n){
sum <- 0
a <- 1
b <- 1
print(sum)
print(a)
for(i in 1:n){
sum <- a + b
a <- b
b <- sum
print(sum)
}
}
fibonacci <- fib(5)
fibonacci <- fib(10)
fib2 <- function(n){
sum <- 0
a <- 1
b <- 1
print(sum)
print(a)
lista <- c(a)
for(i in 1:n){
sum <- a + b
a <- b
b <- sum
print(sum)
}
}
mean(fibonacci)
fibonacci <- fib(10)
fibonacci <- fib(10)
#ES 2 SUCCESSIONE DI FIBONACCI
fib <- function(n){
sum <- 0
a <- 1
b <- 1
print(sum)
print(a)
list <- c(1)
for(i in 1:n){
sum <- a + b
a <- b
b <- sum
update.list(sum)
print(sum)
}
print(mean(list))
print(sum(list))
}
fibonacci <- fib(10)
#ES 2 SUCCESSIONE DI FIBONACCI
fib <- function(n){
sum <- 0
a <- 1
b <- 1
print(sum)
print(a)
list <- c(1)
for(i in 1:n){
sum <- a + b
a <- b
b <- sum
update(sum)
print(sum)
}
print(mean(list))
print(sum(list))
}
fibonacci <- fib(10)
sum <- 0
#ES 2 SUCCESSIONE DI FIBONACCI
fib <- function(n){
sum <- 0
a <- 1
b <- 1
print(sum)
print(a)
list <- c(1)
for(i in 1:n){
sum <- a + b
a <- b
b <- sum
update(list)
print(sum)
}
print(mean(list))
print(sum(list))
}
fibonacci <- fib(10)
#ES 2 SUCCESSIONE DI FIBONACCI
fib <- function(n){
sum <- 0
a <- 0
b <- 1
print(sum)
print(a)
valoriFib <- c(a,b)
for(i in 1:n){
sum <- a + b
a <- b
b <- sum
valoriFib <- c(valoriFib, sum)
print(sum)
}
print(mean(list))
print(sum(list))
}
fibonacci <- fib(10)
print("meadia: ", mean(list))
#ES 2 SUCCESSIONE DI FIBONACCI
fib <- function(n){
sum <- 0
a <- 0
b <- 1
print(sum)
print(a)
valoriFib <- c(a,b)
for(i in 1:n){
sum <- a + b
a <- b
b <- sum
valoriFib <- c(valoriFib, sum)
print(sum)
}
cat("meadia: ", mean(list))
cat(sum(list))
}
fibonacci <- fib(10)
cat("meadia: ", mean(valoriFib))
cat(sum(valoriFib))
#ES 2 SUCCESSIONE DI FIBONACCI
fib <- function(n){
sum <- 0
a <- 0
b <- 1
print(sum)
print(a)
valoriFib <- c(a,b)
for(i in 1:n){
sum <- a + b
a <- b
b <- sum
valoriFib <- c(valoriFib, sum)
print(sum)
}
cat("meadia: ", mean(valoriFib))
cat(sum(valoriFib))
}
fibonacci <- fib(10)
#ES 2 SUCCESSIONE DI FIBONACCI
fib <- function(n){
sum <- 0
a <- 0
b <- 1
print(sum)
print(a)
valoriFib <- c(a,b)
for(i in 1:n){
sum <- a + b
a <- b
b <- sum
valoriFib <- c(valoriFib, sum)
print(sum)
}
cat("media: ", mean(valoriFib), "\n")
cat("somma: ", sum(valoriFib), "\n")
}
fibonacci <- fib(10)
#ES 2 SUCCESSIONE DI FIBONACCI
fib <- function(n){
sum <- 0
a <- 0
b <- 1
print(sum)
print(a)
valoriFib <- c(a,b)
for(i in 1:n){
sum <- a + b
a <- b
b <- sum
valoriFib <- c(valoriFib, sum)
print(sum)
}
valoriFib
cat("media: ", mean(valoriFib), "\n")
cat("somma: ", sum(valoriFib), "\n")
}
fibonacci <- fib(10)
#ES 2 SUCCESSIONE DI FIBONACCI
fib <- function(n){
sum <- 0
a <- 0
b <- 1
print(sum)
print(a)
valoriFib <- c(a,b)
for(i in 1:n){
sum <- a + b
a <- b
b <- sum
valoriFib <- c(valoriFib, sum)
print(sum)
}
cat(valoriFib)
cat("media: ", mean(valoriFib), "\n")
cat("somma: ", sum(valoriFib), "\n")
}
fibonacci <- fib(10)
#ES 2 SUCCESSIONE DI FIBONACCI
fib <- function(n){
sum <- 0
a <- 0
b <- 1
print(sum)
print(a)
valoriFib <- c(a,b)
for(i in 1:n){
sum <- a + b
a <- b
b <- sum
valoriFib <- c(valoriFib, sum)
print(sum)
}
cat("media: ", mean(valoriFib), "\n")
cat("somma: ", sum(valoriFib), "\n")
}
fibonacci <- fib(10)
x <- vector("list", length = 3)
x1 <- runif(10, min = 0, max = 10)
x1 <- runif(10, min = 0, max = 10)
x2 <- matrix(1:10, ncol = 3, nrow = 3)
x2
x1 <- runif(10, min = 0, max = 10)
x2 <- matrix(1:10, ncol = 3, nrow = 3)
x3 <- c("Nicola", "Silvestro", "Rodolfo")
lsita = list(x1,x2,x3)
lsita = list(x1,x2,x3)
str(lista)
lista = list(x1,x2,x3)
str(lista)
x <- vector("list", length = 3)
lista = list(x1,x2,x3)
names(lista) <- c("Numeri", "Matrice", "Cantanti")
str(lista)
getwd()
setwd("/home/nic/Scrivania")
getwd()
setwd("/home/nic/Scrivania/data_analytics/ESERCITAZIONE")
setwd("/home/nic/Scrivania/data_analytics")
getwd()
setwd("/home/nic/Scrivania/data_analytics/ESERCITAZIONI/ES1")
getwd()
dati <- read.csv("Life.csv")
dati
dati <- read.csv("Life.csv")
str(dati)
View(dati)
View(dati)
#b)
Si, sono presenti delle osservazioni mancanti come suggerito ad inizio file
#b)
Si, sono presenti delle osservazioni mancanti come suggerito ad inizio file
Come procedere?
View(dati)
dati$value[dati$value == 9999] <- na
dati$value[dati$value == 9999] <- NA
is.na(dati$value)
sum(is.na(dati$value))
dati$country_name <- factor(dati$country_name)
str(dati$country_name)
dati <- dati[-1,]
dati$country_name <- factor(dati$country_name)
str(dati$country_name)
sum(dati$country_name)
table(dati$country_name)
dati$year <- factor(dati$year)
dati$year <- factor(dati$year)
table(dati$year)
mean(dati$country_code == "AUT")
dati$country_name <- factor(dati$country_name)
table(dati$country_name)
dati$country_code == "AUT"
dati[dati$country_code == "AUT"]
dati[,dati$country_code == "AUT"]
dati[dati$country_code == "AUT", ]
dati[dati$country_code == "AUT", ]$value
mean(dati[dati$country_code == "AUT", ]$value)
table(dati$country_name)
dati$country_name <- factor(dati$country_name)
table(dati$country_name)
#come posso confrontarla con gli altri paesi?
#potrei fare un plot delle varie medie
dati$country_name
table(dati$year)
tapply(dati$value, dati$country_name, mean, na.rm=TRUE)
medie_generali <- tapply(dati$value, dati$country_name, mean, na.rm=TRUE)
medie_generali
barplot(medie_generali)
barplot(sort(medie_generali))
medie_generali
hist(sort(medie_generali))
barplot(sort(medie_generali))
vettore <- c(rep(1,6))
apply(vettore, *2)
vettore <- seq(from = 2, to 12, by = 2)
vettore <- seq(from = 2, to = 12, by = 2)
vettore
matrice <- matrix(vettore, ncol = 3, nrow=2)
matrice
is.matrix
is.array
is.matrix(matrice)
is.array(matrice)
b <- matrice[,3]
b
matrix(b)
str(b)
b <- matrice[,3]
str(b)
matrix(b)
nazioni <- read.csv(nazioni.csv)
nazioni <- read.csv("nazioni.csv")
nazioni
